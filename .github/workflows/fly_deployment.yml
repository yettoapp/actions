name: Deploy repository to Fly.io
on:
  workflow_call:
    secrets:
      gh_token:
        required: true
      fly_token:
        required: true
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      HONEYCOMB_API_KEY:
        required: false
      FLY_METRICS_TOKEN:
        required: false
    inputs:
      target:
        required: true
        type: string
      forced:
        required: false
        default: false
        type: boolean
      fly_args:
        required: false
        default: ""
        type: string

jobs:
  deploy:
    name: Fly
    runs-on: ubuntu-latest-m
    steps:
      - name: Merge main branch
        if: ${{ inputs.forced == false }}
        uses: everlytic/branch-merge@1.1.1
        with:
          github_token: ${{ secrets.gh_token }}
          source_ref: ${{ github.repository.default_branch }}
          target_branch: ${{ github.ref }}
          commit_message_template: "[auto-merge] Merged {source_ref} into target {target_branch}"

      - name: Start deployment
        id: deployment
        uses: actions/github-script@v7
        with:
          result-encoding: string
          github-token: ${{ secrets.gh_token }}
          script:
            | # FIXME: `required_contexts` are always off, because it seems to conflict with GH actions; https://github.com/yettoapp/yetto/actions/runs/5417564599
            let forced = ${{ inputs.forced == true }};
            let opts = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "${{ github.ref }}",
              environment: "${{ inputs.target}}",
              production_environment: ${{ inputs.target == 'production' }},
              transient_environment: ${{ inputs.target == 'staging' }},
              auto_merge: false,
              description: "Release deployment",
              required_contexts: []
            };

            const deployment = await github.rest.repos.createDeployment(opts);

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: "in_progress",
              log_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            });
            return deployment.data.id

      - uses: actions/checkout@v4

      - uses: yettoapp/actions/setup-fly@main

      - name: Deploy to Fly.io
        timeout-minutes: 10
        run: |
          flyctl deploy --remote-only \
          --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          --build-arg HONEYCOMB_API_KEY=${{ secrets.HONEYCOMB_API_KEY }} \
          --build-arg FLY_METRICS_TOKEN=${{ secrets.FLY_METRICS_TOKEN }} \
          ${{ inputs.fly_args }} \
          -c vendor/fly/fly-${{ inputs.target }}.toml
        env:
          FLY_API_TOKEN: ${{ secrets.fly_token }}
          RAILS_ENV: ${{ inputs.target }}

      - name: update deployment status
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.gh_token }}
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: "${{ job.status }}",
              log_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            });
