---
name: Runs a Rails test suite

on:
  workflow_call:
    secrets:
      gh_token:
        required: true
    inputs:
      system_tests:
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  pull-requests: write

jobs:
  test_with_sqlite:
    runs-on:
      labels: Ubuntu-TestRunner
    timeout-minutes: 10

    env:
      RAILS_ENV: test
      RAILS_MASTER_KEY: supersecret
      SLACK_LOG_URL: https://slack.com/the_log_room

    steps:
      - if: ${{ contains(github.event.head_commit.message, '[skip test]') }}
        name: Skip test
        shell: bash
        run: |
          echo "Skipping test workflow because commit message contains `[skip test]`"
          exit 0

      - name: Setup SQLite environment
        uses: ryohidaka/action-setup-sqlite@v1.2.0
        with:
          version: latest

      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.gh_token }}

      - uses: yettoapp/actions/setup-languages@main
        with:
          ruby: true
          node: ${{ inputs.system_tests == true }}

      - name: Set up the database
        shell: bash
        run: |
          bin/rails db:test:prepare || echo 'DB could not be created!'

      - if: ${{ inputs.system_tests == true }}
        name: Get Vite cache restore key
        id: restored-vite-cache-key
        shell: bash
        run: |
          echo "digest=$(bin/rails r 'print ViteRuby.digest')" >> $GITHUB_OUTPUT

      - if: ${{ inputs.system_tests == true }}
        name: Cache assets
        id: cache-assets
        uses: actions/cache/restore@v4
        with:
          path: |
            public/vite-test
            tmp/cache/vite
          key: asset-cache-${{ runner.os }}-${{ steps.restored-vite-cache-key.outputs.digest }}
          restore-keys: |
            asset-cache-${{ runner.os }}-
            asset-cache-

      - if: ${{ inputs.system_tests == true }}
        name: Precompile assets
        shell: bash
        run: |
          export PRECOMPILING=1
          bin/rails assets:precompile

      - uses: yettoapp/actions/run-ruby-tests@main
        timeout-minutes: 10
        id: run-tests
        with:
          github_token: ${{ secrets.gh_token }}

      - if: ${{ always() && inputs.system_tests == true }}
        name: Get Vite save restore key
        id: new-vite-cache-key
        shell: bash
        run: |
          echo "digest=$(bin/rails r 'print ViteRuby.digest')" >> $GITHUB_OUTPUT

      - if: ${{ always() && inputs.system_tests == true && steps.new-vite-cache-key.outputs.digest != steps.restored-vite-cache-key.outputs.digest }}
        name: Cache Vite assets
        uses: actions/cache/save@v4
        with:
          path: |
            public/vite-test
            tmp/cache/vite
          key: asset-cache-${{ runner.os }}-${{ steps.new-vite-cache-key.outputs.digest }}

      - uses: actions/upload-artifact@v4
        if: ${{ always() && inputs.system_tests == true && steps.run-tests.outcome == 'failure' }}
        with:
          name: capybara_failure_screenshots
          path: ./tmp/capybara
